"""
Django settings for blog_project project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# 获取项目根路径
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-op)h#g6y_m3_p@be$e!m7n)z&ech^j4rzidfbi&k*7lr5pt)uw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# DEBUG = False

ALLOWED_HOSTS = []


# 网站信息
SITE_ADDRESS='127.0.01:8000'
SITE_NAME='赵萍的个人博客'
SITE_DESC='大四学生 / 计院摸鱼选手 / 为斯卡蒂献上♥'
SITE_COPYRIGHT=''
GITHUB='https://github.com/yui73'
PRO_RSS=''
PRO_EMAIL=''
WELCOME_DESC = "WELCOME!"
# 打钱

ALI_PAY=''
WEIXIN_PAY=''

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'mdeditor',
    # 'markdown_deux',
    # 'bootstrap4',
    # 'crispy_forms'
]

# 导入Crispy插件
# CRISPY_TEMPLATE_PACK = 'bootstrap4'

# 注册自定义用户model
AUTH_USER_MODEL= 'blog.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog_project.urls'

TEMPLATES = [
    dict(BACKEND='django.template.backends.django.DjangoTemplates',
         DIRS=[os.path.join(BASE_DIR, 'templates'),],
         APP_DIRS=True, OPTIONS={
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.views.global_setting',
                'django.template.context_processors.media',
            ],
        }),
]

WSGI_APPLICATION = 'blog_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blogdb',
        # 生产环境不可用root
        'USER':'root',
        'PASSWORD':'root',
        'HOST':'',
        'PORT':'',
        # 'NAME':os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
# 静态文件目录
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
# 设置媒体上传路径
MEDIA_URL = '/media/'
MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')

# 解决markdown上传图片成功，获取不到地址的问题
X_FRAME_OPTIONS = 'SAMEORIGIN'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}  #日志格式
    },
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
            },
        'default': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'log/all.log',     #日志输出文件
            'maxBytes': 1024*1024*5,                  #文件大小
            'backupCount': 5,                         #备份份数
            'formatter':'standard',                   #使用哪种formatters日志格式
        },
        'error': {
            'level':'ERROR',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'log/error.log',
            'maxBytes':1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
            },
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'request_handler': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': 'log/script.log',
            'maxBytes': 1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
            },
        'scprits_handler': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'log/script.log',
            'maxBytes': 1024*1024*5,
            'backupCount': 5,
            'formatter':'standard',
            }
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'DEBUG',
            'propagate': False,
            },
        'scripts': {
            'handlers': ['scprits_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'blog.views': {
            'handlers': ['default', 'error'],
            'level': 'DEBUG',
            'propagate': True
        },
    }
}

# simpleui 的主题
SIMPLEUI_HOME_TITLE = '博客后台管理系统'

SIMPLEUI_HOME_INFO = False

SIMPLEUI_DEFAULT_THEME = 'layui.css'

SIMPLEUI_LOGO = 'https://yui73.github.io/img/headicon.jpg'

# 配置simpleui admin的菜单栏
SIMPLEUI_CONFIG={
    'system_keep':False,
    'dynamic':False,
    # 差一个资源管理
    'menu_display':['文章管理','分类管理','标签管理','评论管理','友情链接','网站管理','用户管理'],
    'menus':[
        {
            'app':'auth',
            'name':'用户管理',
            'icon':'fa fa-user-shield',
            'models':[
                {
                    'name':'用户列表',
                    'icon':'fa fa-user',
                    'url':'/admin/blog/user/',
                },
                {
                    'name':'用户组',
                    'icon':'fa fa-th-list',
                    'url':'auth/group/',
                },
            ]
        },
        {
            'name':'文章管理',
            'icon':'fa fa-book-open',
            'url':'/admin/blog/article',
        },
        {
            'name':'分类管理',
            'icon':'fa fa-list',
            'url':'/admin/blog/category',
        },
        {
            'name': '标签管理',
            'icon': 'fa fa-tag',
            'url': '/admin/blog/tag',
        },
        {
            'name': '评论管理',
            'icon': 'fa fa-comment',
            'url': '/admin/blog/comment',
        },
        {
            'name': '友情链接',
            'icon': 'fa fa-link',
            'url': '/admin/blog/links',
        },
        {
            'name':'网站管理',
            'icon':'fa fa-plus',
            'models':[
                {
                    'name': '网站基本信息管理',
                    'icon': 'fa fa-file',
                    'url': '/admin/blog/siteinfo',
                },
                {
                    'name': '页面管理',
                    'icon': 'fa fa-list',
                    'url': '/admin/blog/pagemanager',
                },
                {
                    'name':'About页面管理',
                    'icon':'fa fa-font',
                    'url':'/admin/blog/about'
                },
            ],
        },
    ]
}

# 配置邮箱
# 邮箱后端插件
#邮件相关配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# 腾讯QQ邮箱 SMTP 服务器地址
EMAIL_HOST = 'smtp.qq.com'
# SMTP服务的端口号
EMAIL_PORT = 25
# 接收邮件的QQ邮箱
EMAIL_HOST_USER = '1507371282@qq.com'
# 在QQ邮箱->设置->帐户->“POP3/IMAP......服务” 里得到的在第三方登录QQ邮箱授权码
EMAIL_HOST_PASSWORD = 'gsiaqyxtutlfhbff'
# 发送邮件的邮箱
EMAIL_FROM = 'python<1507371282@qq.com>'